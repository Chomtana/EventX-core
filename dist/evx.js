window["evx"] =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/main.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/main.js":
/*!*********************!*\
  !*** ./src/main.js ***!
  \*********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createEvent = createEvent;\nexports.removeEvent = removeEvent;\nexports.createVarEvent = createVarEvent;\nexports.removeVarEvent = removeVarEvent;\nexports.on = on;\nexports.off = off;\nexports.default = exports.setting = exports.unbinds = void 0;\n//import $ from 'jquery';\nif (typeof JQuery !== 'undefined') $ = jQuery;\nvar events = {};\nvar varevents = {};\nvar unbinds = {};\nexports.unbinds = unbinds;\nvar setting = {\n  resizeObserverFirstRun: true,\n  cssObserveEqualChange: false\n  /**\r\n   * Create driver for a single event (If add to exisitng event type it will stack)\r\n   * @param {string} name name of event\r\n   * @param {(target:Element,callback:(e)=>boolean)=>()=>void} bind Bind function that takes target element (native HTMLElement) and callback and return unbind function (no argument) that unbind event that has been binded using bind function\r\n   */\n\n};\nexports.setting = setting;\n\nfunction createEvent(name, bind) {\n  if (!events[name]) events[name] = [];\n  events[name].push(bind);\n}\n/**\r\n * Remove event driver created by createEvent function only (This function don't unbind events that has already binded)\r\n * @param {string} name name of event\r\n * @param {(target:Element,callback:(e)=>boolean)=>()=>void} bind Bind function that was used to pass into createEvent function (optional)\r\n */\n\n\nfunction removeEvent(name, bind) {\n  if (events[name]) {\n    if (!bind) {\n      events[name] = null;\n    } else {\n      for (var i = 0; i < events[name].length; i++) {\n        if (events[name][i] == bind) {\n          events[name].splice(i, 1);\n          break;\n        }\n      }\n    }\n  }\n}\n/**\r\n * Create driver for events that start with \"<prefix>:\" (If add to exisitng event type it will stack)\r\n * @param {string} prefix prefix of event (Ex: prefix=csschange will match \"csschange:...\" event)\r\n * @param {(target:Element,callback:(e)=>boolean)=>()=>void} bind Bind function that takes target element (native HTMLElement) and callback and return unbind function (no argument) that unbind event that has been binded using bind function\r\n */\n\n\nfunction createVarEvent(prefix, bind) {\n  if (!varevents[prefix]) varevents[prefix] = [];\n  varevents[prefix].push(bind);\n}\n/**\r\n * Remove event driver created by createVarEvent function only (This function don't unbind events that has already binded)\r\n * @param {string} prefix prefix of event\r\n * @param {(target:Element,callback:(e)=>boolean)=>()=>void} bind Bind function that was used to pass into createEvent function (optional)\r\n */\n\n\nfunction removeVarEvent(prefix, bind) {\n  if (varevents[prefix]) {\n    if (!bind) {\n      varevents[prefix] = null;\n    } else {\n      for (var i = 0; i < varevents[prefix].length; i++) {\n        if (varevents[prefix][i] == bind) {\n          varevents[prefix].splice(i, 1);\n          break;\n        }\n      }\n    }\n  }\n}\n\nfunction on_single(target, name, callback) {\n  if (!(target instanceof HTMLElement)) throw \"target must be an instance of HTMLElement or JQuery\";\n\n  if (events[name]) {\n    events[name].forEach(function (event) {\n      if (!target.unbinds) target.unbinds = {};\n      if (!target.unbinds[name]) target.unbinds[name] = {};\n      if (!target.unbinds[name][callback]) target.unbinds[name][callback] = [];\n      target.unbinds[name][callback].push(event(target, callback));\n    });\n  }\n}\n\nfunction on_single_var(target, name, callback, args) {\n  if (varevents[name]) {\n    varevents[name].forEach(function (event) {\n      if (!target.unbinds) target.unbinds = {};\n      if (!target.unbinds[name]) target.unbinds[name] = {};\n      if (!target.unbinds[name][callback]) target.unbinds[name][callback] = [];\n      target.unbinds[name][callback].push(event(target, callback, args));\n    });\n  }\n}\n\nfunction on(target, name, callback) {\n  var part = name.split(\":\");\n\n  if (typeof $ !== 'undefined') {\n    $(target).each(function (index, ele) {\n      on_single(ele, name, callback);\n    });\n  } else {\n    on_single(target, name, callback);\n  } //Variable event\n\n\n  if (part.length > 1) {\n    var firstpart = part[0];\n    part.shift();\n\n    if (typeof $ !== 'undefined') {\n      $(target).each(function (index, ele) {\n        on_single_var(ele, firstpart, callback, part);\n      });\n    } else {\n      on_single_var(target, firstpart, callback, part);\n    }\n  }\n}\n\nfunction off_single(target, name, callback) {\n  if (!name) {\n    if (target.unbinds) {\n      for (var unbind_ in target.unbinds) {\n        off_single(target, unbind_);\n      }\n\n      target.unbinds = null;\n    }\n\n    return;\n  }\n\n  if (!callback) {\n    if (target.unbinds && target.unbinds[name]) {\n      for (var unbind_ in target.unbinds[name]) {\n        off_single(target, name, unbind_);\n      }\n\n      target.unbinds[name] = null;\n    }\n\n    return;\n  }\n\n  if (target.unbinds && target.unbinds[name] && target.unbinds[name][callback]) {\n    target.unbinds[name][callback].forEach(function (unbind) {\n      unbind();\n    });\n    target.unbinds[name][callback] = null;\n  }\n}\n\nfunction off(target, name, callback) {\n  if (typeof $ !== 'undefined') {\n    $(target).each(function (index, ele) {\n      off_single(ele, name, callback);\n    });\n  } else {\n    off_single(target, name, callback);\n  }\n}\n\nvar _default = {\n  createEvent: createEvent,\n  createVarEvent: createVarEvent,\n  removeEvent: removeEvent,\n  removeVarEvent: removeVarEvent,\n  on: on,\n  off: off,\n  setting: setting,\n  unbinds: unbinds\n};\nexports.default = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/main.js\n");

/***/ })

/******/ });